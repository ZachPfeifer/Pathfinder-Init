{"version":3,"sources":["state/Constants.js","random/Input.js","random/Utility.js","components/Card.js","components/Dice.js","App.js","serviceWorker.js","index.js"],"names":["initialState","id","uuid","name","initiative","undefined","hitpoints","ac","rolls","label","type","value","onChange","className","rollD20","Math","floor","random","onNameChange","onInitiativeChange","onHitpointsChange","onAcChange","onRemoveElement","Input","e","onClick","target","onDiceRoll","App","props","state","elements","diceRoll","updateName","bind","updateInitiative","updateHitpoints","updateAc","addCard","removeElement","updateRoll","localStorage","getItem","this","setState","JSON","parse","console","log","fetchData","nextProps","nextState","setItem","stringify","removeItem","window","location","reload","index","findIndex","el","clearTimeout","timeout_","Number","setTimeout","sortElements","length","sort","l","r","filter","map","Card","key","Dice","clearLocalStorage","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf28ffdd.chunk.js","sourcesContent":["// import { randomId } from \"./Utility\";\r\nimport uuid from 'uuid'\r\n\r\n\r\n\r\nexport const initialState = [\r\n  {\r\n    id: uuid(),\r\n    name: \"Zach\",\r\n    initiative: undefined,\r\n    hitpoints: undefined,\r\n    ac: undefined,\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Charles\",\r\n    initiative: undefined,\r\n    hitpoints: undefined,\r\n    ac: undefined,\r\n\r\n  }, {\r\n    id: uuid(),\r\n    name: \"Gabe\",\r\n    initiative: undefined,\r\n    hitpoints: undefined,\r\n    ac: undefined,\r\n\r\n  }, {\r\n    id: uuid(),\r\n    name: \"\",\r\n    initiative: undefined,\r\n    hitpoints: undefined,\r\n    ac: undefined,\r\n\r\n  }];\r\n\r\nexport const rolls = [\r\n  {\r\n    rolls: undefined,\r\n  },\r\n]\r\n","// INPUT LIBRARY\r\n\r\nimport React from 'react';\r\n\r\n\r\nexport default ({\r\n  label,\r\n  type,\r\n  value,\r\n  onChange\r\n}) =>\r\n  <div className=\"mycard\">\r\n    <label>\r\n      {label}\r\n      <input type={type} value={value} onChange={onChange} />\r\n    </label>\r\n\r\n\r\n\r\n  </div>;","export const randomId = () =>\r\n  Math.floor(Math.random() * 1000000);\r\n\r\n//DICE ROLLS\r\nexport const rollPercentage = () =>\r\n  Math.floor(Math.random() * 100) + 1;\r\n\r\nexport const rollD20 = () =>\r\n  Math.floor(Math.random() * 20) + 1;\r\n\r\nexport const rollD12 = () =>\r\n  Math.floor(Math.random() * 12) + 1;\r\n\r\nexport const rollD10 = () =>\r\n  Math.floor(Math.random() * 10) + 1;\r\n\r\nexport const rollD8 = () =>\r\n  Math.floor(Math.random() * 8) + 1;\r\n\r\nexport const rollD6 = () =>\r\n  Math.floor(Math.random() * 6) + 1;\r\n\r\nexport const rollD4 = () =>\r\n  Math.floor(Math.random() * 4) + 1;\r\n\r\n","import React from 'react';\r\nimport Input from '../random/Input'\r\nimport { rollD20 } from '../random/Utility'\r\n\r\nexport default ({\r\n  id,\r\n  name,\r\n  initiative,\r\n  hitpoints,\r\n  ac,\r\n  onNameChange,\r\n  onInitiativeChange,\r\n  onHitpointsChange,\r\n  onAcChange,\r\n  onRemoveElement,\r\n}) =>\r\n\r\n  <div className=\"mycard\">\r\n    <Input\r\n      label=\"Name\"\r\n      type=\"text\"\r\n      value={name}\r\n      onChange={e => onNameChange(id, e)}\r\n    />\r\n\r\n    <div id=\"initiative\">\r\n      <Input\r\n        label=\"Initiative\"\r\n        type=\"number\"\r\n        value={initiative}\r\n        onChange={e => onInitiativeChange(id, e)}\r\n      />\r\n      <button\r\n        className=\"btn btn-dark btn-sm\"\r\n        type=\"button\"\r\n        onClick={() => onInitiativeChange(id, { target: { value: rollD20() } })}\r\n      >D20</button>\r\n    </div>\r\n\r\n\r\n    <Input\r\n      label=\"AC\"\r\n      type=\"number\"\r\n      value={ac}\r\n      onChange={e => onAcChange(id, e)}\r\n    />\r\n    <Input\r\n      label=\"Hitpoints\"\r\n      type=\"number\"\r\n      value={hitpoints}\r\n      onChange={e => onHitpointsChange(id, e)}\r\n    />\r\n    <button className=\"btn btn-danger btn-sm\" onClick={() => onRemoveElement(id)}>X</button>\r\n  </div>;","import React from 'react';\r\nimport Dice from '../random/Input'\r\nimport { rollPercentage, rollD12, rollD10, rollD8, rollD6, rollD4, rollD20 } from \"../random/Utility\";\r\n// import { rolls } from '../state/Constants';\r\n\r\nexport default ({\r\n  rolls,\r\n  onDiceRoll,\r\n}) =>\r\n\r\n  <div className=\"dice \">\r\n    <div className=\"row\">\r\n      <div className=\"col-12 col-sm-12 d-flex justify-content-center\">\r\n        <Dice\r\n          label=\"Roll Results\"\r\n          type=\"number\"\r\n          value={rolls}\r\n          onChange={e => onDiceRoll(e)}\r\n        />\r\n        {/* <Dice\r\n          label=\"Modifiers\"\r\n          type=\"number\"\r\n          value={rolls}\r\n          onChange={e => onDiceRoll(e)}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n\r\n    <hr />\r\n    <span className=\"d-flex justify-content-center\">\r\n      <p>Rolls:  </p>\r\n      <button className=\"btn btn-dark\" onClick={() => onDiceRoll({ target: { value: rollD20() } })}>D20</button>\r\n      <button className=\"btn btn-dark\" onClick={() => onDiceRoll({ target: { value: rollD12() } })}>D12</button>\r\n      <button className=\"btn btn-dark\" onClick={() => onDiceRoll({ target: { value: rollD10() } })}>D10</button>\r\n      <button className=\"btn btn-dark\" onClick={() => onDiceRoll({ target: { value: rollD8() } })}>D8</button>\r\n      <button className=\"btn btn-dark\" onClick={() => onDiceRoll({ target: { value: rollD6() } })}>D6</button>\r\n      <button className=\"btn btn-dark\" onClick={() => onDiceRoll({ target: { value: rollD4() } })}>D4</button>\r\n      <button className=\"btn btn-dark\" onClick={() => onDiceRoll({ target: { value: rollPercentage() } })}>%</button>\r\n    </span>\r\n\r\n\r\n    {/* <hr />\r\n    <i className=\"ra ra-dice-six ra-2x\"></i>\r\n    <i className=\"ra ra-perspective-dice-random ra-2x\"></i>\r\n    <i className=\"ra ra-perspective-dice-random ra-2x\" onClick={() => onDiceRoll({ target: { value: rollPercentage() } })}>Roll Percentage</i>\r\n    <i className=\"ra ra-perspective-dice-random ra-2x\" onClick={() => onDiceRoll({ target: { value: rollD20() } })}>Roll D20</i> */}\r\n\r\n\r\n\r\n\r\n  </div>;\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport '../node_modules/rpg-awesome/css/rpg-awesome.min.css'\nimport uuid from 'uuid'\nimport { initialState, rolls } from \"./state/Constants\";\nimport Card from './components/Card'\nimport Dice from './components/Dice'\n\n\n\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      elements: initialState,\n      diceRoll: rolls,\n    };\n    this.updateName = this.updateName.bind(this)\n    this.updateInitiative = this.updateInitiative.bind(this)\n    this.updateHitpoints = this.updateHitpoints.bind(this)\n    this.updateAc = this.updateAc.bind(this)\n\n    this.addCard = this.addCard.bind(this)\n    this.removeElement = this.removeElement.bind(this)\n\n    //NEW\n    this.updateRoll = this.updateRoll.bind(this)\n\n\n  }\n\n\n  //Local Storage\n  UNSAFE_componentWillMount() {\n    localStorage.getItem('Players') && this.setState({\n      elements: JSON.parse(localStorage.getItem('Players'))\n    })\n  }\n\n  UNSAFE_componentDidMount() {\n    if (!localStorage.getItem('Players')) {\n      this.fetchData();\n    } else {\n      console.log('Using Local Storage for Player Info');\n    }\n  }\n\n  UNSAFE_componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem('Players', JSON.stringify(nextState.elements));\n    // localStorage.setItem('PlayersDate', Date.now());\n\n  }\n\n  clearLocalStorage() {\n    localStorage.removeItem(\"Players\");\n    window.location.reload(false)\n  }\n\n  fetchData() {\n    //API/SERVER Link for later\n  }\n\n\n\n  //SECTION Update Functions\n  //Player\n  updateName(id, e) {\n    const { value } = e.target;\n    const elements = this.state.elements\n    const index = elements.findIndex(el => el.id === id)\n    elements[index].name = value;\n    this.setState({ elements });\n  }\n\n  updateInitiative(id, e) {\n    clearTimeout(this.timeout_)\n    const { value } = e.target;\n    const elements = this.state.elements\n    const index = elements.findIndex(el => el.id === id)\n    elements[index].initiative = Number(value);\n    this.setState({ elements });\n    this.timeout_ = setTimeout(() => this.sortElements(), 500)\n  }\n\n  updateHitpoints(id, e) {\n    const { value } = e.target;\n    const elements = this.state.elements\n    const index = elements.findIndex(el => el.id === id)\n    elements[index].hitpoints = Number(value);\n    this.setState({ elements });\n  }\n\n  updateAc(id, e) {\n    const { value } = e.target;\n    const elements = this.state.elements\n    const index = elements.findIndex(el => el.id === id)\n    elements[index].ac = Number(value);\n    this.setState({ elements });\n  }\n\n  //ROLLs\n  updateRoll(e) {\n    const { value } = e.target;\n    let diceRoll = this.state.diceRoll\n    diceRoll = value;\n    this.setState({ diceRoll });\n  }\n\n\n  //SECTION ADD/REMOVE\n  addCard() {\n    const { elements } = this.state;\n    elements[elements.length] = {\n      id: uuid(),\n      name: `player ${elements.length + 1}`,\n      initiative: undefined,\n      hitpoints: undefined,\n      ac: undefined,\n    };\n    this.setState({\n      elements: elements.sort((l, r) => r.initiative - l.initiative)\n    })\n  }\n\n  removeElement(id) {\n    let { elements } = this.state;\n    elements = elements.filter(el => el.id !== id)\n    this.setState({ elements });\n  }\n\n  sortElements() {\n    const { elements } = this.state;\n    this.setState({\n      elements: elements.sort((l, r) => r.initiative - l.initiative)\n    })\n  }\n\n\n  render() {\n    //TEST Rendering\n    // console.log(randomId())\n    console.log(uuid())\n    console.log(this.state.elements);\n    console.log(this.state.diceRoll);\n\n\n\n\n\n\n    const { elements } = this.state;\n    const { diceRoll } = this.state;\n\n    return (\n      <div className=\"container center\">\n        <div className=\"card bg-light mb-3 d-flex justify-content-center\">\n          <h1 className=\"card-header\">Pathfinder Initiative Tracker</h1>\n          <div className=\"card-body \">\n            <h5 className=\"card-title\">Initiatives:</h5>\n            <p className=\"card-text \">\n              {elements.map(elements =>\n                <Card\n                  key={elements.key}\n                  name={elements.name}\n                  initiative={elements.initiative}\n                  hitpoints={elements.hitpoints}\n                  ac={elements.ac}\n                  onNameChange={this.updateName}\n                  onInitiativeChange={this.updateInitiative}\n                  onHitpointsChange={this.updateHitpoints}\n                  onAcChange={this.updateAc}\n                  onRemoveElement={this.removeElement}\n                  id={elements.id}\n                />\n\n              )}\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <Dice\n                    rolls={diceRoll}\n                    onDiceRoll={this.updateRoll}\n                  />\n                </div>\n              </div>\n            </p>\n          </div>\n          <div className=\"card-footer\">\n            <div className=\"btn-container row\">\n              <button className=\"btn btn-dark col-6\" onClick={this.addCard}>+ Add Player</button>\n              <button className=\"btn btn-dark col-6\" onClick={this.clearLocalStorage}>Clear Storage</button>\n            </div>\n          </div>\n        </div>\n\n\n\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}